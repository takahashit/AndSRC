package jp.taka.app.gsenser;

import android.app.Activity;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.widget.TextView;

public class Gsenser extends Activity implements SensorEventListener{
	
	public final static String TAG = "Gsenser";
	protected final static double RAD2DEG = 180/Math.PI;
	
	SensorManager sensorManager;
	
	float[] rotationMatrix = new float[9];
	float[] gravity = new float[3];
	float[] geomagnetic = new float[3];
	float[] attitude = new float[3];
	
	TextView xText;
	TextView yText;
	TextView zText;
	
	TextView azimuthText;
	TextView pitchText;
	TextView rollText;
	
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
		setContentView(R.layout.main);     
		findViews();
		initSensor();
   
    }
	
	public void onResume(){
		super.onResume();
		sensorManager.registerListener(
			this,
			sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),
			SensorManager.SENSOR_DELAY_GAME);
		sensorManager.registerListener(
			this,
			sensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD),
			SensorManager.SENSOR_DELAY_GAME);
	}
	
	public void onPause(){
		super.onPause();
		sensorManager.unregisterListener(this);
	}
	
	protected void findViews(){
		xText = (TextView)findViewById(R.id.xacc);
		yText = (TextView)findViewById(R.id.yacc);
		zText = (TextView)findViewById(R.id.zacc);
		
		azimuthText = (TextView)findViewById(R.id.azimuth);
		pitchText = (TextView)findViewById(R.id.pitch);
		rollText = (TextView)findViewById(R.id.roll);
	}
	
	protected void initSensor(){
		sensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
	}

	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {}

	@Override
	public void onSensorChanged(SensorEvent event) {
		
		switch(event.sensor.getType()){
		case Sensor.TYPE_MAGNETIC_FIELD:
			geomagnetic = event.values.clone();
			break;
		case Sensor.TYPE_ACCELEROMETER:
			gravity = event.values.clone();
			break;
		}

		if(geomagnetic != null && gravity != null){
			
			SensorManager.getRotationMatrix(
				rotationMatrix, null, 
				gravity, geomagnetic);
			
			xText.setText(Integer.toString(
					(int)gravity[0]));
			yText.setText(Integer.toString(
					(int)gravity[1]));
			zText.setText(Integer.toString(
					(int)gravity[2]));
			
			SensorManager.getOrientation(
				rotationMatrix, 
				attitude);
			
			azimuthText.setText(Integer.toString(
				(int)(attitude[0] * RAD2DEG)));
			pitchText.setText(Integer.toString(
				(int)(attitude[1] * RAD2DEG)));
			rollText.setText(Integer.toString(
				(int)(attitude[2] * RAD2DEG)));

		}
		
	}

}